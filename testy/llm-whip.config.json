{
  "$schema": "https://raw.githubusercontent.com/bewinxed/llm-whip/main/schema.json",
  "patterns": [
    {
      "name": "todo",
      "pattern": "TODO",
      "message": "TODO comment detected",
      "reactions": [
        "alert",
        "sound",
        "interrupt"
      ],
      "interruptMessage": "TODO comments should be completed before submitting code. Please implement the actual functionality instead of leaving placeholder comments."
    },
    {
      "name": "placeholder",
      "pattern": "placeholder|stub",
      "message": "Placeholder implementation detected",
      "reactions": [
        "alert",
        "sound",
        "interrupt"
      ],
      "interruptMessage": "Placeholder or stub implementations should be replaced with actual working code. Please complete the implementation."
    },
    {
      "name": "not-implemented",
      "pattern": "not implemented|NotImplementedError",
      "message": "Not implemented error detected",
      "reactions": [
        "alert",
        "sound",
        "interrupt"
      ],
      "interruptMessage": "Found 'not implemented' error. Please provide a proper implementation instead of throwing placeholder errors."
    },
    {
      "name": "important-thing",
      "pattern": "The important thing is",
      "message": "Lazy explanation detected",
      "reactions": [
        "alert",
        "sound",
        "interrupt"
      ],
      "interruptMessage": "Detected 'The important thing is...' - this often indicates avoiding detailed implementation. Please provide specific, actionable details."
    },
    {
      "name": "for-now",
      "pattern": "for now",
      "message": "Temporary implementation detected",
      "reactions": [
        "alert",
        "sound",
        "interrupt"
      ],
      "interruptMessage": "Found 'for now' - this indicates temporary or incomplete implementation. Please provide a proper, permanent solution."
    }
  ],
  "reactions": {
    "sound": true,
    "alert": { "format": "color" },
    "interrupt": {
      "delay": 500,
      "sequence": ["\\u001b", "{message}", "\\n"]
    }
  }
}